plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.sonarqube" version "6.0.1.5171"
}

sonar {
    properties {
        property "sonar.projectKey", "JChanK_Library"
        property "sonar.organization", "jchank"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.login", "aacfb9d4f1c098daca4c05dda5bd103da7383f28"
    }
}
group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.postgresql:postgresql'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    // Логирование
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'ch.qos.logback:logback-classic'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

tasks.named('test') {
    useJUnitPlatform()
}
